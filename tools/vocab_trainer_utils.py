import random


def format_training_process_message(vocab_name: str,
                                    training_mode: str,
                                    wordpairs_left: int,
                                    total_wordpairs_count: int,
                                    words: str) -> str:
    """–§–æ—Ä–º–∞—Ç—É—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é –ø—ñ–¥ —á–∞—Å —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è"""
    summary_message: str = (
        f'üìö –°–ª–æ–≤–Ω–∏–∫: {vocab_name}\n'
        f'üîÑ –¢–∏–ø —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è: {training_mode}\n\n'
        f'üìã –ü—Ä–æ–≥—Ä–µ—Å: {wordpairs_left} / {total_wordpairs_count}\n\n'
        f'üîª –ü–µ—Ä–µ–∫–ª–∞–¥—ñ—Ç—å —Å–ª–æ–≤–æ(–∞):\n'
        f'{words}')
    return summary_message


def format_training_summary_message(vocab_name: str,
                                    training_mode: str,
                                    training_streak_count: int,
                                    correct_answer_count: int,
                                    wrong_answer_count: int,
                                    annotation_shown_count: int,
                                    translation_shown_count: int,
                                    training_time_minutes: int,
                                    training_time_seconds: int) -> str:
    """–§–æ—Ä–º–∞—Ç—É—î –ø—ñ–¥—Å—É–º–∫–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑—ñ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é –ø—Ä–æ –∑–∞–≤–µ—Ä—à–µ–Ω–µ —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è"""
    summary_message: str = (
        f'üéâ –¢—Ä–µ–Ω—É–≤–∞–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ!\n\n'
        f'üìö –°–ª–æ–≤–Ω–∏–∫: {vocab_name}\n'
        f'üîÑ –¢–∏–ø —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è: {training_mode}\n\n'
        f'üéØ –ü—Ä–æ–π–¥–µ–Ω–∏—Ö —Ç—Ä–µ–Ω—É–≤–∞–Ω—å –ø–æ—Å–ø—ñ–ª—å: {training_streak_count}\n'
        f'‚úÖ –ö–æ—Ä–µ–∫—Ç–Ω–æ –ø–µ—Ä–µ–∫–ª–∞–¥–µ–Ω–æ —Å–ª—ñ–≤: {correct_answer_count}\n'
        f'‚ùå –ö—ñ–ª—å–∫—ñ—Å—Ç—å –ø–æ–º–∏–ª–æ–∫: {wrong_answer_count}\n'
        f'üí° –ü–æ–∫–∞–∑—ñ–≤ –∞–Ω–æ—Ç–∞—Ü—ñ–π: {annotation_shown_count}\n'
        f'üí¨ –ü–æ–∫–∞–∑—ñ–≤ –ø–µ—Ä–µ–∫–ª–∞–¥—ñ–≤: {translation_shown_count}\n\n'
        f'‚è± –¢—Ä–∏–≤–∞–ª—ñ—Å—Ç—å —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è: {training_time_minutes} —Ö–≤–∏–ª–∏–Ω(–∞), {training_time_seconds} —Å–µ–∫—É–Ω–¥(–∞)\n\n'
        '‚û°Ô∏è –û–±–µ—Ä—ñ—Ç—å, —â–æ —Ä–æ–±–∏—Ç–∏ –¥–∞–ª—ñ:')
    return summary_message


def get_random_wordpair_idx(available_idxs: list, preview_idx: int) -> int:
    """–ü–æ–≤–µ—Ä—Ç–∞—î –≤–∏–ø–∞–¥–∫–æ–≤–∏–π —ñ–Ω–¥–µ–∫—Å —Å–ª–æ–≤–Ω–∏–∫–æ–≤–æ—ó –ø–∞—Ä–∏ —ñ–∑ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö.

    Notes:
        –Ø–∫—â–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –¥–æ—Å—Ç—É–ø–Ω–∏—Ö —ñ–Ω–¥–µ–∫—Å—ñ–≤ –±—ñ–ª—å—à–∞ –∑–∞ –æ–¥–∏–Ω, —Ç–æ –æ–±—Ä–∞–Ω–∏–π –Ω–æ–≤–∏–π —ñ–Ω–¥–µ–∫—Å –Ω–µ –ø–æ–≤–∏–Ω–µ–Ω –∑–±—ñ–≥–∞—Ç–∏—Å—è –∑ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ–º.

    Args:
        available_idxs (list): –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö —ñ–Ω–¥–µ–∫—Å—ñ–≤.
        preview_idx (int): –ü–æ–ø–µ—Ä–µ–¥–Ω—ñ–π —ñ–Ω–¥–µ–∫—Å.

    Returns:
        int: –í–∏–ø–∞–¥–∫–æ–≤–∏–π —ñ–Ω–¥–µ–∫—Å.
    """
    if len(available_idxs) == 1:
        return available_idxs[0]

    # –Ø–∫—â–æ —ñ–Ω–¥–µ–∫—Å—ñ–≤ –±—ñ–ª—å—à–µ –æ–¥–Ω–æ–≥–æ, —Ç–æ –æ–±–∏—Ä–∞—î—Ç—å—Å—è –Ω–æ–≤–∏–π —ñ–Ω–¥–µ–∫—Å
    wordpair_idx: int = random.choice(available_idxs)

    while wordpair_idx == preview_idx:
        wordpair_idx: int = random.choice(available_idxs)

    return wordpair_idx
