from utils.types import Tender


def display_add_tender(tender: Tender):
    
    text = (
        f"<b>üìù–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Ç–µ–Ω–¥–µ—Ä–∞:</b>\n"
        f"{' '*5}<b>‚îú –†–µ–µ—Å—Ç—Ä–æ–≤—ã–π –Ω–æ–º–µ—Ä</b> <code>{tender.id}</code>\n"
        f"{' '*5}<b>‚îú –ó–∞–∫–∞–∑—á–∏–∫:</b> <code>{tender.customer_name}</code>\n"
        f"{' '*5}<b>‚îú –ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ:</b> <code>{tender.name}</code>\n"
        f"{' '*5}<b>‚îî –°—Ä–æ–∫ –æ–∫–æ–Ω—á–∞–Ω–∏—è:</b> <code>{tender.deadline_date} {tender.deadline_time}</code>\n"
    )
    print(tender)
    if tender.complaints:
        complaint_text = "<b>‚ùóÔ∏è–û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ</b>\n\n"
        complaints = tender.complaints.split(";")
        for num, complaint in enumerate(complaints, start=1):
            complaint_text += f"{' '*5}<b><a href='{complaint}'>‚õîÔ∏è –ñ–∞–ª–æ–±–∞ #{num}</a></b>\n"
        text += complaint_text

    return text

def display_list_tender(items: list, text_value: str) -> str:
    """
    –°–æ–∑–¥–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∏–∑ —Å–ø–∏—Å–∫–∞ —Å–ª–æ–≤–∞—Ä–µ–π –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –µ–≥–æ –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É —Ç–µ–∫—Å—Ç—É.
    """
    if not items:
        raise ValueError(text_value)
    text = ""
    for item in items:  # type: dict
        item: Tender
        text += f"‚û°Ô∏è <a href='{item.url}'>{item.name}</a>\n"
    return text