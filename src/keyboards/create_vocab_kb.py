from aiogram.types import InlineKeyboardButton
from aiogram.types.inline_keyboard_markup import InlineKeyboardMarkup


def get_kb_create_vocab_name(is_keep_old_vocab_name: bool = False) -> InlineKeyboardMarkup:
    """–ü–æ–≤–µ—Ä—Ç–∞—î –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –¥–ª—è –ø—Ä–æ—Ü–µ—Å—É —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–∞–∑–≤–∏ —Å–ª–æ–≤–Ω–∏–∫–∞.

    Args:
        is_keep_old_vocab_name (bool): –ü—Ä–∞–ø–æ—Ä, —á–∏ –¥–æ–¥–∞–≤–∞—Ç–∏ –∫–Ω–æ–ø–∫—É "–ó–∞–ª–∏—à–∏—Ç–∏ –ø–æ—Ç–æ—á–Ω—É –Ω–∞–∑–≤—É" –¥–æ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∏
        (–∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º False).

    Returns:
        InlineKeyboardMarkup: –ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –¥–ª—è –ø—Ä–æ—Ü–µ—Å—É —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–∞–∑–≤–∏ —Å–ª–æ–≤–Ω–∏–∫–∞.
    """
    buttons: list[list[InlineKeyboardButton]] = [
        [InlineKeyboardButton(text='üõë –°–∫–∞—Å—É–≤–∞—Ç–∏', callback_data='cancel_create_vocab')]]

    if is_keep_old_vocab_name:
        btn_keep_old_vocab_name: list[InlineKeyboardButton] = [
            InlineKeyboardButton(text='üëç –ó–∞–ª–∏—à–∏—Ç–∏ –ø–æ—Ç–æ—á–Ω—É –Ω–∞–∑–≤—É', callback_data='keep_old_vocab_name')]
        buttons.insert(0, btn_keep_old_vocab_name)
    return InlineKeyboardMarkup(inline_keyboard=buttons)


def get_kb_create_vocab_description() -> InlineKeyboardMarkup:
    buttons: list[list[InlineKeyboardButton]] = [
        [InlineKeyboardButton(text='‚û°Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç–∏', callback_data='skip_create_vocab_description')],
        [InlineKeyboardButton(text='üîÑ –ó–º—ñ–Ω–∏—Ç–∏ –Ω–∞–∑–≤—É —Å–ª–æ–≤–Ω–∏–∫–∞', callback_data='change_vocab_name')],
        [InlineKeyboardButton(text='üõë –°–∫–∞—Å—É–≤–∞—Ç–∏', callback_data='cancel_create_vocab')]]

    return InlineKeyboardMarkup(inline_keyboard=buttons)


def get_kb_create_wordpairs(is_with_btn_save: bool = True, is_with_btn_status: bool = True) -> InlineKeyboardMarkup:
    """–ü–æ–≤–µ—Ä—Ç–∞—î –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –¥–ª—è –ø—Ä–æ—Ü–µ—Å—É –¥–æ–¥–∞–≤–∞–Ω–Ω—è —Å–ª–æ–≤–Ω–∏–∫–æ–≤–∏—Ö –ø–∞—Ä.

    Args:
        is_with_btn_save (bool): –ü—Ä–∞–ø–æ—Ä, —á–∏ –ø–æ—Ç—Ä—ñ–±–Ω–æ –¥–æ–¥–∞–≤–∞—Ç–∏ –¥–æ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∏ –∫–Ω–æ–ø–∫—É "–ó–±–µ—Ä–µ–≥—Ç–∏" (–∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º True).
        is_with_btn_status (bool): –ü—Ä–∞–ø–æ—Ä, —á–∏ –ø–æ—Ç—Ä—ñ–±–Ω–æ –¥–æ–¥–∞–≤–∞—Ç–∏ –¥–æ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∏ –∫–Ω–æ–ø–∫—É "–°—Ç–∞—Ç—É—Å" (–∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º True).

    Returns:
        InlineKeyboardMarkup: –ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –∑ —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª –ø—ñ–¥ —á–∞—Å –¥–æ–¥–∞–≤–∞–Ω–Ω—è —Å–ª–æ–≤–Ω–∏–∫–æ–≤–∏—Ö –ø–∞—Ä.
    """
    buttons: list[list[InlineKeyboardButton]] = []

    btn_save: list[InlineKeyboardButton] = [
        InlineKeyboardButton(text='üíæ –ó–±–µ—Ä–µ–≥—Ç–∏', callback_data='save_vocab')]
    btn_status: list[InlineKeyboardButton] = [
        InlineKeyboardButton(text='üìä –°—Ç–∞—Ç—É—Å', callback_data='create_wordpairs_status')]
    btn_cancel: list[InlineKeyboardButton] = [
        InlineKeyboardButton(text='üõë –°–∫–∞—Å—É–≤–∞—Ç–∏', callback_data='cancel_create_vocab')]

    if is_with_btn_save:
        btn_save: list[InlineKeyboardButton] = [
            InlineKeyboardButton(text='üíæ –ó–±–µ—Ä–µ–≥—Ç–∏', callback_data='save_vocab')]
        buttons.append(btn_save)

    if is_with_btn_status:
        btn_status: list[InlineKeyboardButton] = [
            InlineKeyboardButton(text='üìä –°—Ç–∞—Ç—É—Å', callback_data='create_wordpairs_status')]
        buttons.append(btn_status)

    buttons.append(btn_cancel)

    return InlineKeyboardMarkup(inline_keyboard=buttons)


def get_kb_confirm_cancel_create_vocab() -> InlineKeyboardMarkup:
    """–ü–æ–≤–µ—Ä—Ç–∞—î –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –∑ –∫–Ω–æ–ø–∫–∞–º–∏ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è —Å–∫–∞—Å—É–≤–∞–Ω–Ω—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å–ª–æ–≤–Ω–∏–∫–∞"""
    buttons: list[list[InlineKeyboardButton]] = [
        [InlineKeyboardButton(text='‚úÖ –¢–∞–∫', callback_data='vocab_base')],
        [InlineKeyboardButton(text='‚ùå –ù—ñ', callback_data='cancel_create_vocab_no')]]
    return InlineKeyboardMarkup(inline_keyboard=buttons)
