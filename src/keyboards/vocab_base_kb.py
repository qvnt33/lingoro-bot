from aiogram.types import InlineKeyboardButton
from aiogram.types.inline_keyboard_markup import InlineKeyboardMarkup
from aiogram.utils.keyboard import InlineKeyboardBuilder

from config import VOCAB_PAGINATION_LIMIT
from src.handlers.callback_data import PaginationCallback, VocabCallback


def get_inline_kb_vocab_base(vocab_lst: list,
                             start_offset: int,
                             end_offset: int,
                             current_page: int,
                             total_pages_pagination: int,
                             limit: int,
                             is_vocab_base_empty: bool) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –∑ –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –≤–∏–±–æ—Ä—É —Å–ª–æ–≤–Ω–∏–∫—ñ–≤ —Ç–∞ –ø–∞–≥—ñ–Ω–∞—Ü—ñ—ó"""
    kb = InlineKeyboardBuilder()

    # –Ø–∫—â–æ —É —Å–ª–æ–≤–Ω–∏–∫—É —î —Å–ª–æ–≤–Ω–∏–∫–æ–≤—ñ –ø–∞—Ä–∏
    if not is_vocab_base_empty:
        # –î–æ–¥–∞–≤–∞–Ω–Ω—è –∫–Ω–æ–ø–æ–∫ —Å–ª–æ–≤–Ω–∏–∫—ñ–≤ –¥–ª—è –ø–æ—Ç–æ—á–Ω–æ—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏
        for vocab in vocab_lst[start_offset:end_offset]:
            total_wordpairs: int = len(vocab['wordpairs'])  # –ö—ñ–ª—å–∫—ñ—Å—Ç—å —Å–ª–æ–≤–Ω–∏–∫–æ–≤–∏—Ö –ø–∞—Ä —É —Å–ª–æ–≤–Ω–∏–∫—É
            vocab_button_text: str = f'{vocab['name']} [{total_wordpairs}]'
            kb.button(text=vocab_button_text, callback_data=VocabCallback(vocab_id=vocab['id']).pack())

        kb.adjust(1)

        # –î–æ–¥–∞–≤–∞–Ω–Ω—è –ø–∞–≥—ñ–Ω–∞—Ü—ñ—ó, —è–∫—â–æ —Å—Ç–æ—Ä—ñ–Ω–æ–∫ –±—ñ–ª—å—à–µ 1
        if total_pages_pagination > 1:
            btn_prev_page = InlineKeyboardButton(
                text='‚¨ÖÔ∏è',
                callback_data=PaginationCallback(name='vocab_base', page=current_page - 1, limit=limit).pack())
            btn_page_info = InlineKeyboardButton(
                text=f'{current_page}/{total_pages_pagination}',
                callback_data='neutral_call')
            btn_next_page = InlineKeyboardButton(
                text='‚û°Ô∏è',
                callback_data=PaginationCallback(name='vocab_base', page=current_page + 1, limit=limit).pack())

            kb.row(btn_prev_page, btn_page_info, btn_next_page, width=3)

    btn_add_vocab = InlineKeyboardButton(
        text='‚ûï –°—Ç–≤–æ—Ä–∏—Ç–∏ —Å–ª–æ–≤–Ω–∏–∫',
        callback_data='create_vocab')

    btn_menu = InlineKeyboardButton(
        text='üè† –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é',
        callback_data='menu')

    kb.row(btn_add_vocab, btn_menu, width=1)

    return kb.as_markup()


def get_inline_kb_add_vocab() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –∑ –∫–Ω–æ–ø–∫–æ—é —Å–∫–∞—Å—É–≤–∞–Ω–Ω—è –ø—Ä–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—ñ —Å–ª–æ–≤–Ω–∏–∫–∞"""
    kb = InlineKeyboardBuilder()
    btn_cancel_add = InlineKeyboardButton(text='–°–∫–∞—Å—É–≤–∞—Ç–∏',
                                          callback_data=PaginationCallback(name='vocab_base',
                                                                           page=1,
                                                                           limit=VOCAB_PAGINATION_LIMIT).pack())
    kb.row(btn_cancel_add)
    return kb.as_markup()
